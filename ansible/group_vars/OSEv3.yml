# Ansible settings 
ansible_become: true

# OKD License
openshift_deployment_type: origin

# Image version
openshift_image_tag: v{{ openshift_ansible_version }}.0

# Security
openshift_master_identity_providers:
  # - name: LDAP
  #   challenge: false
  #   login: true
  #   mappingMethod: claim
  #   kind: LDAPPasswordIdentityProvider
  #   attributes:
  #       id:
  #       - dn
  #       email:
  #       - mail
  #       name:
  #       - cn
  #       preferredUsername:
  #       - uid
  #   bindDN: "{service_name}"
  #   bindPassword: "{service_name_password}"
  #   insecure: true
  #   url: "ldap://{url}/{top of ldap from where search users}?sAMAccountName"
  - name: HTTP
    login: true
    challenge: true
    kind: HTPasswdPasswordIdentityProvider

## Defining htpasswd users admin:admin by default
openshift_master_htpasswd_users: {'admin': '$apr1$Mf7W16Gb$6qoVR4GSLFueI4XpdMSa60'}

# Disable checks
openshift_disable_check: memory_availability,disk_availability,docker_storage

# Use only CRI-O
openshift_use_crio: true
openshift_use_crio_only: true

# Network
openshift_ip: "{{ machine_ip }}"

# Additional services
## Ansible service broker
ansible_service_broker_install: true
## Add Node Problem Detector
openshift_node_problem_detector_install: false
## Logging
openshift_logging_install_logging: false
openshift_logging_es_ops_nodeselector: {"node-role.kubernetes.io/infra":"true"}
openshift_logging_es_nodeselector: {"node-role.kubernetes.io/infra":"true"}

# OKD URLs
openshift_master_cluster_hostname: "{{ dns_name }}"
openshift_master_cluster_public_hostname: "{{ dns_name }}"
openshift_master_default_subdomain: apps.{{ dns_name }}

# PVs settings
openshift_persistentlocalstorage_enabled: True
openshift_persistentlocalstorage_classes: []
openshift_persistentlocalstorage_path: /mnt/local-storage
openshift_persistentlocalstorage_provisionner_image: quay.io/external_storage/local-volume-provisioner:v1.0.1

# Group description
openshift_node_groups: 
  - name: node-config-all-in-one-crio
    labels: 
      - 'node-role.kubernetes.io/master=true'
      - 'node-role.kubernetes.io/infra=true'
      - 'node-role.kubernetes.io/compute=true'
      - 'zone=dev'
    edits: 
      - {'key': 'kubeletArguments.container-runtime', 'value': ['remote']}
      - {'key': 'kubeletArguments.container-runtime-endpoint', 'value': ['unix:///var/run/crio/crio.sock']}
      - {'key': 'kubeletArguments.image-service-endpoint', 'value': ['unix:///var/run/crio/crio.sock']}
      - {'key': 'kubeletArguments.runtime-request-timeout', 'value': ['10m']}
  - name: node-config-all-in-one
    labels: 
      - 'node-role.kubernetes.io/master=true'
      - 'node-role.kubernetes.io/infra=true'
      - 'node-role.kubernetes.io/compute=true'
      - 'zone=dev'
